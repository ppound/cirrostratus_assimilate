<?php

define('ISLANDORA_VAULT_MANAGE_ITEMS', 'manage islandora vault items');

/**
 * Implementation of hook_menu. 
 * we need some standard entry points so we can have consistent urls for different Object actions
 */
function islandora_vault_menu() {
  $items = array();
  $items['admin/islandora/islandora_vault/configure'] = array(
    'title' => 'Islandora Vault',
    'description' => 'Configure settings for Islandora Duracloud cloudsync.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_vault_admin'),
    'file' => 'admin/islandora_vault.admin.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,
  );
  $items['islandora_vault/%/manage/vault/logcontent'] = array(
    'title' => 'Islandora Vault Serivce Log Content',
    //'description' => 'Configure settings for Islandora Duracloud cloudsync.',
    'page callback' => 'islandora_vault_service_log_content',
    'file' => 'includes/islandora_vault.service.inc',
    'page arguments' => array('islandora_vault_admin'),
    'access arguments' => array('islandora_vault_access'),
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'weight' => -1,
  );
  $items['islandora/object/%islandora_object/manage/vault'] = array(
    'title' => 'Vault',
    'page callback' => 'islandora_vault_manage_object',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_vault_access',
    'file' => 'includes/islandora_vault.forms.inc',
    'access arguments' => array(2),
  );

  return $items;
}

/**
 * determines whether or not to show this modules manage tab
 * @global object $user
 * @param string $object_id
 * @return boolean
 */
function islandora_vault_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }
  return user_access(FEDORA_MANAGE);
}

/* function islandora_vault_admin_paths(){
  $paths = array(
  'islandora_vault/service/logcontent*' => TRUE,
  );
  return $paths;
  } */

function islandora_vault_permission() {
  return array(
    ISLANDORA_VAULT_MANAGE_ITEMS => array(
      'title' => t('Manage items in Islandora Vault'),
      'description' => t('Allow users to add items to Duracloud')
    )
  );
}

/**
 * preprocess the edit template
 * @global string $base_url
 * @param array $variables
 *   theme variables for the edit template
 */
function islandora_vault_preprocess_islandora_default_edit(&$variables) {
  $islandora_object = $variables['islandora_object'];
  module_load_include('inc', 'islandora_vault', 'includes/islandora_vault.utils');
  global $base_url;
  $datastreams = array();
  //$variables['islandora_editmetadata_url'] = $base_url . '/islandora/edit_form/' . $islandora_object->id;
  module_load_include('inc', 'islandora', 'includes/datastream');
  module_load_include('inc', 'islandora', 'includes/utilities');
  // $variables['add_datastream_form'] = drupal_get_form('islandora_add_datastream_form', $islandora_object->id);
  $header = array(
    array('data' => t('Vault')),
    array('data' => t('ID')),
    array('data' => t('Label')),
    array('data' => t('Type')),
    array('data' => t('Mime type')),
    array('data' => t('Size')),
    array('data' => t('Operations'), 'colspan' => '3'),
      //array('data' => t('Delete')),
  );
  $table_attributes = array('class' => array('manage-datastreams'));
  $rows = array();
  foreach ($islandora_object as $ds) {
    $duracloud_info = "";
    if ($ds->controlGroup == 'M') {
      try {
        $headers = islandora_vault_get_duracloud_item_properties($ds->location);
        $duracloud_info = $headers['Content-Md5'];
      } catch (Exception $e) {
        $duracloud_info = 'Missing';
      }
    }

    $rows[] = array(
      array('class' => 'vault-datastream', 'data' => $duracloud_info),
      array('class' => 'datastream-id', 'data' => l($ds->id, islandora_datastream_get_url($ds, 'view'))),
      array('class' => 'datastream-label', 'data' => $ds->label),
      array('class' => 'datastream-control', 'data' => islandora_control_group_to_human_readable($ds->controlGroup)),
      array('class' => 'datastream-mime', 'data' => $ds->mimeType),
      array('class' => 'datastream-size', 'data' => islandora_datastream_get_human_readable_size($ds)),
      array('class' => 'datastream-download', 'data' => l(t('download'), islandora_datastream_get_url($ds, 'download'))),
      array('class' => 'datstream-edit', 'data' => islandora_datastream_edit_get_link($islandora_object, $ds->id)),
      array('class' => 'datastream-delete', 'data' => islandora_datastream_get_delete_link($ds)),
    );
  }
  $caption = $islandora_object->label . ' - ' . $islandora_object->id;
  $table = array('colgroups' => NULL, 'sticky' => TRUE, 'empty' => 'Error loading datastreams', 'caption' => $caption, 'header' => $header, 'rows' => $rows, 'attributes' => $table_attributes);
  $variables['datastream_table'] = theme_table($table);
}

/*
function islandora_vault_islandora_pre_purge_object($object){
  if(isset($object['CLOUDSYNC'])){
    //TODO: maybe delete cloudsync tasks etc.
    // we may want to leave the task in case we want to restore
   
  }
}*/
